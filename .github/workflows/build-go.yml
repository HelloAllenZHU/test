# 一个基本的工作流
# 1、安装linux系统
# 2、安装go、设置go环境
# 3、pull代码
# 4、编译go
# 5、打包go
# 6、部署go

# 工作流的名称
name: build-go

# 工作流运行的前提条件
on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # 允许手动运行工作流
  workflow_dispatch: 

# 工作流由1-n个job(任务)组成，这些job可以顺序执行或者并发执行
jobs:
  # 本工作流包含的第一个job
  build:
    # job的名称
    name: 编译

    # 运行job所需的操作系统环境
    runs-on: ubuntu-latest

    # job包含的step(步骤)
    steps:
      # 拉取代码
      - uses: actions/checkout@v2
      
      # 安装go
      - uses: actions/setup-go@v2

      - name: 开启go mod
        run: |
          export GO111MODULE=on
          go env

      - name: 运行go build命令
        id : build
        run: |
          go build test.go
          pwd
          ls

      - name: Read testfile
        id: testfile
        uses: juliangruber/read-file-action@v1.1.4
        with:
            path: ./test

      - name: 发布release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "b" #${{ github.ref }}
          release_name: "b" #Release ${{ github.ref }} xxxxx
          body: "./test"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./test
          asset_name: test
          asset_content_type: application/zip

  # 本工作流包含的第二个job
  test:
    # 需要先执行build任务
    needs: build

    # job的名称
    name: 测试

    # 运行job所需的操作系统环境
    runs-on: ubuntu-latest

    # job包含的step(步骤)
    steps:
      - name: 纯粹测试
        env:
          MY_VAR: Hi there! My name is
          FIRST_NAME: Allen
          MIDDLE_NAME: To
          LAST_NAME: Zhu
        run: 
          echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.

  # 本工作流包含的第三个job
  deploy:
    # 需要先执行build和test任务
    needs: [build,test]
    
    # job名称
    name: 部署到目标机器

    # 运行job所需的操作系统环境
    runs-on: ubuntu-latest

    steps:
      - name: 发布还没实现
        run: |
          pwd
          ls
  
